// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CryptoCurrencyDepth.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - CryptoCurrencyDepthRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface CryptoCurrencyDepthRoot : GPBRootObject
@end

#pragma mark - CryptoCurrencyDepth

typedef GPB_ENUM(CryptoCurrencyDepth_FieldNumber) {
  CryptoCurrencyDepth_FieldNumber_Symbol = 1,
  CryptoCurrencyDepth_FieldNumber_Type = 2,
  CryptoCurrencyDepth_FieldNumber_Timestamp = 3,
  CryptoCurrencyDepth_FieldNumber_BidDepthPriceBase = 4,
  CryptoCurrencyDepth_FieldNumber_BidDepthPriceArray = 5,
  CryptoCurrencyDepth_FieldNumber_BidDepthVolumeArray = 6,
  CryptoCurrencyDepth_FieldNumber_AskDepthPriceBase = 7,
  CryptoCurrencyDepth_FieldNumber_AskDepthPriceArray = 8,
  CryptoCurrencyDepth_FieldNumber_AskDepthVolumeArray = 9,
  CryptoCurrencyDepth_FieldNumber_Offset = 10,
  CryptoCurrencyDepth_FieldNumber_VolumeOffset = 11,
};

GPB_FINAL @interface CryptoCurrencyDepth : GPBMessage

/**
 * {
 *    "type":"quote-cc-lv2",
 *    "symbol":"BTCUSD.DBS.CC",
 *    "timestamp":1599206400366,
 *
 *    // 买卖盘数据，最多只推送前 40 档
 *    // 由 2 个等长数组构成，分别代表：price（价格）/ volume（数量），相邻档位价格不一样
 *    "askDepth":"[[11383.0,11384.0],[1.0,2.0]]",
 *    "bidDepth":"[[11382.3,11381.0],[5.0,0.5]]"
 * }
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *symbol;

@property(nonatomic, readwrite, copy, null_resettable) NSString *type;

@property(nonatomic, readwrite) int64_t timestamp;

@property(nonatomic, readwrite) int64_t bidDepthPriceBase;

/**
 * bidDepthPrice存储的是相对于bidDepthPriceBase的偏移量
 * 恢复为原始价格信息 price = (bidDepthPriceBase + bidDepthPrice) / 10^offset
 **/
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *bidDepthPriceArray;
/** The number of items in @c bidDepthPriceArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bidDepthPriceArray_Count;

/** 恢复为原始数量 bidDepthVolume / 10^volumeOffset */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *bidDepthVolumeArray;
/** The number of items in @c bidDepthVolumeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bidDepthVolumeArray_Count;

@property(nonatomic, readwrite) int64_t askDepthPriceBase;

/**
 * askDepthPrice存储的是相对于askDepthPriceBase的偏移量
 * 恢复为原始价格信息 price = (askDepthPriceBase + askDepthPrice) / 10^offset
 **/
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *askDepthPriceArray;
/** The number of items in @c askDepthPriceArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger askDepthPriceArray_Count;

/** 恢复为原始数量 askDepthVolume / 10^volumeOffset */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *askDepthVolumeArray;
/** The number of items in @c askDepthVolumeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger askDepthVolumeArray_Count;

/** 小数点偏移位数 */
@property(nonatomic, readwrite) int32_t offset;

/** 小数点偏移位数 */
@property(nonatomic, readwrite) int32_t volumeOffset;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
