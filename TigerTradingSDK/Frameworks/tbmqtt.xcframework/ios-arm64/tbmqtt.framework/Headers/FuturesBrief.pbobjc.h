// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FuturesBrief.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GPBInt64Value;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - FuturesBriefRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface FuturesBriefRoot : GPBRootObject
@end

#pragma mark - FuturesBrief

typedef GPB_ENUM(FuturesBrief_FieldNumber) {
  FuturesBrief_FieldNumber_Symbol = 1,
  FuturesBrief_FieldNumber_Type = 2,
  FuturesBrief_FieldNumber_Timestamp = 3,
  FuturesBrief_FieldNumber_Offset = 4,
  FuturesBrief_FieldNumber_LastPrice = 5,
  FuturesBrief_FieldNumber_PreClose = 6,
  FuturesBrief_FieldNumber_PreSettlement = 7,
};

GPB_FINAL @interface FuturesBrief : GPBMessage

/** 合约symbol，例如CNmain */
@property(nonatomic, readwrite, copy, null_resettable) NSString *symbol;

/** 取值为: quote-fut-market */
@property(nonatomic, readwrite, copy, null_resettable) NSString *type;

/** 推送kafka的时间 */
@property(nonatomic, readwrite) int64_t timestamp;

/** 价格偏移 */
@property(nonatomic, readwrite) int32_t offset;

/**
 * 以下3个字段不一定存在，使用前需要调用 hasXxx() 判断字段是否存在
 * 最新成交价，需通过 lastPrice / 10^offset还原成真实价格
 **/
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *lastPrice;
/** Test to see if @c lastPrice has been set. */
@property(nonatomic, readwrite) BOOL hasLastPrice;

/** 昨收，需通过 preClose / 10^offset还原成真实价格 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *preClose;
/** Test to see if @c preClose has been set. */
@property(nonatomic, readwrite) BOOL hasPreClose;

/** 昨结，需通过 preSettlement / 10^offset还原成真实价格 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *preSettlement;
/** Test to see if @c preSettlement has been set. */
@property(nonatomic, readwrite) BOOL hasPreSettlement;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
