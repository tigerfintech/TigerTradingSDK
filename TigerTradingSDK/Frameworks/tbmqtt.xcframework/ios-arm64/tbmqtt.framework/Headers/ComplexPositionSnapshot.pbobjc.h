// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: complexPositionSnapshot.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ComplexPositionSnapshot_ComboModePosition;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ComplexPositionSnapshotRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ComplexPositionSnapshotRoot : GPBRootObject
@end

#pragma mark - ComplexPositionSnapshot

typedef GPB_ENUM(ComplexPositionSnapshot_FieldNumber) {
  ComplexPositionSnapshot_FieldNumber_ContractId = 1,
  ComplexPositionSnapshot_FieldNumber_Symbol = 2,
  ComplexPositionSnapshot_FieldNumber_SecType = 3,
  ComplexPositionSnapshot_FieldNumber_Expiry = 4,
  ComplexPositionSnapshot_FieldNumber_Right = 5,
  ComplexPositionSnapshot_FieldNumber_Strike = 6,
  ComplexPositionSnapshot_FieldNumber_Multiplier = 7,
  ComplexPositionSnapshot_FieldNumber_Market = 8,
  ComplexPositionSnapshot_FieldNumber_Currency = 9,
  ComplexPositionSnapshot_FieldNumber_UnderlyingSymbol = 10,
  ComplexPositionSnapshot_FieldNumber_LatestPrice = 11,
  ComplexPositionSnapshot_FieldNumber_LastClosePrice = 12,
  ComplexPositionSnapshot_FieldNumber_Position = 13,
  ComplexPositionSnapshot_FieldNumber_PositionScale = 14,
  ComplexPositionSnapshot_FieldNumber_MarketValue = 15,
  ComplexPositionSnapshot_FieldNumber_AvailableQty = 16,
  ComplexPositionSnapshot_FieldNumber_AverageCost = 17,
  ComplexPositionSnapshot_FieldNumber_AverageCostByAverage = 18,
  ComplexPositionSnapshot_FieldNumber_AverageCostOfCarry = 19,
  ComplexPositionSnapshot_FieldNumber_UnrealPnl = 20,
  ComplexPositionSnapshot_FieldNumber_UnrealPnlByAverage = 21,
  ComplexPositionSnapshot_FieldNumber_UnrealPnlByCostOfCarry = 22,
  ComplexPositionSnapshot_FieldNumber_RealizedPnl = 23,
  ComplexPositionSnapshot_FieldNumber_RealizedPnlByAverage = 24,
  ComplexPositionSnapshot_FieldNumber_PositionPnl = 25,
  ComplexPositionSnapshot_FieldNumber_TodayPnl = 26,
  ComplexPositionSnapshot_FieldNumber_Exchange = 27,
  ComplexPositionSnapshot_FieldNumber_IsOdd = 28,
  ComplexPositionSnapshot_FieldNumber_YesterdayPnl = 29,
  ComplexPositionSnapshot_FieldNumber_LabelsArray = 30,
  ComplexPositionSnapshot_FieldNumber_ComboTypeMap = 31,
  ComplexPositionSnapshot_FieldNumber_LegPositionsArray = 32,
  ComplexPositionSnapshot_FieldNumber_PositionKey = 33,
  ComplexPositionSnapshot_FieldNumber_MmValue = 34,
  ComplexPositionSnapshot_FieldNumber_MmPercent = 35,
  ComplexPositionSnapshot_FieldNumber_UnrealPnlPercent = 36,
  ComplexPositionSnapshot_FieldNumber_UnrealPnlPercentByAverage = 37,
  ComplexPositionSnapshot_FieldNumber_UnrealPnlPercentByCostOfCarry = 38,
  ComplexPositionSnapshot_FieldNumber_SecGroupType = 39,
  ComplexPositionSnapshot_FieldNumber_ContractExtraDescription = 40,
  ComplexPositionSnapshot_FieldNumber_ContractMajorDescription = 41,
  ComplexPositionSnapshot_FieldNumber_AccruedInterest = 42,
  ComplexPositionSnapshot_FieldNumber_PositionPnlPercent = 43,
};

/**
 * 组合视图下的持仓数据结构
 **/
GPB_FINAL @interface ComplexPositionSnapshot : GPBMessage

@property(nonatomic, readwrite) int64_t contractId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *symbol;

@property(nonatomic, readwrite, copy, null_resettable) NSString *secType;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *expiry;
/** Test to see if @c expiry has been set. */
@property(nonatomic, readwrite) BOOL hasExpiry;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *right;
/** Test to see if @c right has been set. */
@property(nonatomic, readwrite) BOOL hasRight;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *strike;
/** Test to see if @c strike has been set. */
@property(nonatomic, readwrite) BOOL hasStrike;

@property(nonatomic, readwrite) double multiplier;

@property(nonatomic, readwrite, copy, null_resettable) NSString *market;

@property(nonatomic, readwrite, copy, null_resettable) NSString *currency;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *underlyingSymbol;
/** Test to see if @c underlyingSymbol has been set. */
@property(nonatomic, readwrite) BOOL hasUnderlyingSymbol;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *latestPrice;
/** Test to see if @c latestPrice has been set. */
@property(nonatomic, readwrite) BOOL hasLatestPrice;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *lastClosePrice;
/** Test to see if @c lastClosePrice has been set. */
@property(nonatomic, readwrite) BOOL hasLastClosePrice;

@property(nonatomic, readwrite) int64_t position;

@property(nonatomic, readwrite) int32_t positionScale;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *marketValue;
/** Test to see if @c marketValue has been set. */
@property(nonatomic, readwrite) BOOL hasMarketValue;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *availableQty;
/** Test to see if @c availableQty has been set. */
@property(nonatomic, readwrite) BOOL hasAvailableQty;

@property(nonatomic, readwrite) double averageCost;

@property(nonatomic, readwrite) double averageCostByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *averageCostOfCarry;
/** Test to see if @c averageCostOfCarry has been set. */
@property(nonatomic, readwrite) BOOL hasAverageCostOfCarry;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnl;
/** Test to see if @c unrealPnl has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnl;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlByAverage;
/** Test to see if @c unrealPnlByAverage has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlByCostOfCarry;
/** Test to see if @c unrealPnlByCostOfCarry has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlByCostOfCarry;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *realizedPnl;
/** Test to see if @c realizedPnl has been set. */
@property(nonatomic, readwrite) BOOL hasRealizedPnl;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *realizedPnlByAverage;
/** Test to see if @c realizedPnlByAverage has been set. */
@property(nonatomic, readwrite) BOOL hasRealizedPnlByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *positionPnl;
/** Test to see if @c positionPnl has been set. */
@property(nonatomic, readwrite) BOOL hasPositionPnl;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *todayPnl;
/** Test to see if @c todayPnl has been set. */
@property(nonatomic, readwrite) BOOL hasTodayPnl;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *exchange;
/** Test to see if @c exchange has been set. */
@property(nonatomic, readwrite) BOOL hasExchange;

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *isOdd;
/** Test to see if @c isOdd has been set. */
@property(nonatomic, readwrite) BOOL hasIsOdd;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *yesterdayPnl;
/** Test to see if @c yesterdayPnl has been set. */
@property(nonatomic, readwrite) BOOL hasYesterdayPnl;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *labelsArray;
/** The number of items in @c labelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger labelsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *comboTypeMap;
/** The number of items in @c comboTypeMap without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger comboTypeMap_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ComplexPositionSnapshot_ComboModePosition*> *legPositionsArray;
/** The number of items in @c legPositionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger legPositionsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *positionKey;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *mmValue;
/** Test to see if @c mmValue has been set. */
@property(nonatomic, readwrite) BOOL hasMmValue;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *mmPercent;
/** Test to see if @c mmPercent has been set. */
@property(nonatomic, readwrite) BOOL hasMmPercent;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlPercent;
/** Test to see if @c unrealPnlPercent has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlPercent;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlPercentByAverage;
/** Test to see if @c unrealPnlPercentByAverage has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlPercentByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlPercentByCostOfCarry;
/** Test to see if @c unrealPnlPercentByCostOfCarry has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlPercentByCostOfCarry;

@property(nonatomic, readwrite, copy, null_resettable) NSString *secGroupType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contractExtraDescription;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contractMajorDescription;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *accruedInterest;
/** Test to see if @c accruedInterest has been set. */
@property(nonatomic, readwrite) BOOL hasAccruedInterest;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *positionPnlPercent;
/** Test to see if @c positionPnlPercent has been set. */
@property(nonatomic, readwrite) BOOL hasPositionPnlPercent;

@end

#pragma mark - ComplexPositionSnapshot_ComboModePosition

typedef GPB_ENUM(ComplexPositionSnapshot_ComboModePosition_FieldNumber) {
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_ContractId = 1,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_Symbol = 2,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_SecType = 3,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_Expiry = 4,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_Right = 5,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_Strike = 6,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_Multiplier = 7,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_Market = 8,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_Currency = 9,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_UnderlyingSymbol = 10,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_LatestPrice = 11,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_LastClosePrice = 12,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_Position = 13,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_PositionScale = 14,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_MarketValue = 15,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_AvailableQty = 16,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_AverageCost = 17,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_AverageCostByAverage = 18,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_AverageCostOfCarry = 19,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_UnrealPnl = 20,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_UnrealPnlByAverage = 21,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_UnrealPnlByCostOfCarry = 22,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_RealizedPnl = 23,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_RealizedPnlByAverage = 24,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_PositionPnl = 25,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_TodayPnl = 26,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_Ratio = 27,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_Action = 28,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_UnrealPnlPercent = 29,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_UnrealPnlPercentByAverage = 30,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_UnrealPnlPercentByCostOfCarry = 31,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_ContractExtraDescription = 32,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_ContractMajorDescription = 33,
  ComplexPositionSnapshot_ComboModePosition_FieldNumber_PositionPnlPercent = 34,
};

GPB_FINAL @interface ComplexPositionSnapshot_ComboModePosition : GPBMessage

@property(nonatomic, readwrite) int64_t contractId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *symbol;

@property(nonatomic, readwrite, copy, null_resettable) NSString *secType;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *expiry;
/** Test to see if @c expiry has been set. */
@property(nonatomic, readwrite) BOOL hasExpiry;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *right;
/** Test to see if @c right has been set. */
@property(nonatomic, readwrite) BOOL hasRight;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *strike;
/** Test to see if @c strike has been set. */
@property(nonatomic, readwrite) BOOL hasStrike;

@property(nonatomic, readwrite) double multiplier;

@property(nonatomic, readwrite, copy, null_resettable) NSString *market;

@property(nonatomic, readwrite, copy, null_resettable) NSString *currency;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *underlyingSymbol;
/** Test to see if @c underlyingSymbol has been set. */
@property(nonatomic, readwrite) BOOL hasUnderlyingSymbol;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *latestPrice;
/** Test to see if @c latestPrice has been set. */
@property(nonatomic, readwrite) BOOL hasLatestPrice;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *lastClosePrice;
/** Test to see if @c lastClosePrice has been set. */
@property(nonatomic, readwrite) BOOL hasLastClosePrice;

@property(nonatomic, readwrite) int64_t position;

@property(nonatomic, readwrite) int32_t positionScale;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *marketValue;
/** Test to see if @c marketValue has been set. */
@property(nonatomic, readwrite) BOOL hasMarketValue;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *availableQty;
/** Test to see if @c availableQty has been set. */
@property(nonatomic, readwrite) BOOL hasAvailableQty;

@property(nonatomic, readwrite) double averageCost;

@property(nonatomic, readwrite) double averageCostByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *averageCostOfCarry;
/** Test to see if @c averageCostOfCarry has been set. */
@property(nonatomic, readwrite) BOOL hasAverageCostOfCarry;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnl;
/** Test to see if @c unrealPnl has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnl;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlByAverage;
/** Test to see if @c unrealPnlByAverage has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlByCostOfCarry;
/** Test to see if @c unrealPnlByCostOfCarry has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlByCostOfCarry;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *realizedPnl;
/** Test to see if @c realizedPnl has been set. */
@property(nonatomic, readwrite) BOOL hasRealizedPnl;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *realizedPnlByAverage;
/** Test to see if @c realizedPnlByAverage has been set. */
@property(nonatomic, readwrite) BOOL hasRealizedPnlByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *positionPnl;
/** Test to see if @c positionPnl has been set. */
@property(nonatomic, readwrite) BOOL hasPositionPnl;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *todayPnl;
/** Test to see if @c todayPnl has been set. */
@property(nonatomic, readwrite) BOOL hasTodayPnl;

@property(nonatomic, readwrite) int32_t ratio;

@property(nonatomic, readwrite, copy, null_resettable) NSString *action;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlPercent;
/** Test to see if @c unrealPnlPercent has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlPercent;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlPercentByAverage;
/** Test to see if @c unrealPnlPercentByAverage has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlPercentByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlPercentByCostOfCarry;
/** Test to see if @c unrealPnlPercentByCostOfCarry has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlPercentByCostOfCarry;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contractExtraDescription;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contractMajorDescription;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *positionPnlPercent;
/** Test to see if @c positionPnlPercent has been set. */
@property(nonatomic, readwrite) BOOL hasPositionPnlPercent;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
