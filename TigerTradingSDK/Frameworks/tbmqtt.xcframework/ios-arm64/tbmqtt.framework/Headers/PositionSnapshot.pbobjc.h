// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: positionSnapshot.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - PositionSnapshotRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface PositionSnapshotRoot : GPBRootObject
@end

#pragma mark - PositionSnapshot

typedef GPB_ENUM(PositionSnapshot_FieldNumber) {
  PositionSnapshot_FieldNumber_Symbol = 1,
  PositionSnapshot_FieldNumber_Expiry = 2,
  PositionSnapshot_FieldNumber_Strike = 3,
  PositionSnapshot_FieldNumber_Right = 4,
  PositionSnapshot_FieldNumber_Multiplier = 5,
  PositionSnapshot_FieldNumber_Currency = 6,
  PositionSnapshot_FieldNumber_Market = 7,
  PositionSnapshot_FieldNumber_SecType = 8,
  PositionSnapshot_FieldNumber_NameCn = 9,
  PositionSnapshot_FieldNumber_Exchange = 10,
  PositionSnapshot_FieldNumber_SalableQuantity = 11,
  PositionSnapshot_FieldNumber_EntitlementRatio = 12,
  PositionSnapshot_FieldNumber_Position = 13,
  PositionSnapshot_FieldNumber_PositionScale = 14,
  PositionSnapshot_FieldNumber_LatestPrice = 15,
  PositionSnapshot_FieldNumber_AverageCost = 16,
  PositionSnapshot_FieldNumber_UnrealPnl = 17,
  PositionSnapshot_FieldNumber_MarketValue = 18,
  PositionSnapshot_FieldNumber_TodayPnl = 19,
  PositionSnapshot_FieldNumber_IsOdd = 20,
  PositionSnapshot_FieldNumber_FirstOpenAt = 21,
  PositionSnapshot_FieldNumber_PositionsPercent = 22,
  PositionSnapshot_FieldNumber_UnrealPnlPercent = 23,
  PositionSnapshot_FieldNumber_MmPercent = 24,
  PositionSnapshot_FieldNumber_ComboTypesArray = 25,
  PositionSnapshot_FieldNumber_MmValue = 26,
  PositionSnapshot_FieldNumber_HoldingPeriod = 27,
  PositionSnapshot_FieldNumber_UnderlyingSymbol = 28,
  PositionSnapshot_FieldNumber_AverageCostOfCarry = 29,
  PositionSnapshot_FieldNumber_UnrealPnlByCostOfCarry = 30,
  PositionSnapshot_FieldNumber_UnrealPnlPercentByCostOfCarry = 31,
  PositionSnapshot_FieldNumber_PositionPnl = 32,
  PositionSnapshot_FieldNumber_AverageCostByAverage = 33,
  PositionSnapshot_FieldNumber_UnrealPnlByAverage = 34,
  PositionSnapshot_FieldNumber_UnrealPnlPercentByAverage = 35,
  PositionSnapshot_FieldNumber_RealizedPnl = 36,
  PositionSnapshot_FieldNumber_RealizedPnlByAverage = 37,
  PositionSnapshot_FieldNumber_YesterdayPnl = 38,
  PositionSnapshot_FieldNumber_SalableQty = 39,
  PositionSnapshot_FieldNumber_TodayPnlPercent = 40,
  PositionSnapshot_FieldNumber_LastClosePrice = 41,
  PositionSnapshot_FieldNumber_ContractId = 42,
  PositionSnapshot_FieldNumber_PositionKey = 43,
  PositionSnapshot_FieldNumber_SecGroupType = 44,
  PositionSnapshot_FieldNumber_ContractExtraDescription = 45,
  PositionSnapshot_FieldNumber_ContractMajorDescription = 46,
  PositionSnapshot_FieldNumber_AccruedInterest = 47,
  PositionSnapshot_FieldNumber_PositionPnlPercent = 48,
};

/**
 * 交易长链接推送,字段名跟短链接一致, 参考：https://git.tigerbrokers.net/alpha/site-api-docs/-/blob/master/api/data.md
 * 持仓数据pb格式如下:
 **/
GPB_FINAL @interface PositionSnapshot : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *symbol;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *expiry;
/** Test to see if @c expiry has been set. */
@property(nonatomic, readwrite) BOOL hasExpiry;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *strike;
/** Test to see if @c strike has been set. */
@property(nonatomic, readwrite) BOOL hasStrike;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *right;
/** Test to see if @c right has been set. */
@property(nonatomic, readwrite) BOOL hasRight;

@property(nonatomic, readwrite) double multiplier;

@property(nonatomic, readwrite, copy, null_resettable) NSString *currency;

@property(nonatomic, readwrite, copy, null_resettable) NSString *market;

@property(nonatomic, readwrite, copy, null_resettable) NSString *secType;

/** 废弃 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nameCn;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *exchange;
/** Test to see if @c exchange has been set. */
@property(nonatomic, readwrite) BOOL hasExchange;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *salableQuantity;
/** Test to see if @c salableQuantity has been set. */
@property(nonatomic, readwrite) BOOL hasSalableQuantity;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Value *entitlementRatio;
/** Test to see if @c entitlementRatio has been set. */
@property(nonatomic, readwrite) BOOL hasEntitlementRatio;

@property(nonatomic, readwrite) int64_t position;

@property(nonatomic, readwrite) int32_t positionScale;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *latestPrice;
/** Test to see if @c latestPrice has been set. */
@property(nonatomic, readwrite) BOOL hasLatestPrice;

@property(nonatomic, readwrite) double averageCost;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnl;
/** Test to see if @c unrealPnl has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnl;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *marketValue;
/** Test to see if @c marketValue has been set. */
@property(nonatomic, readwrite) BOOL hasMarketValue;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *todayPnl;
/** Test to see if @c todayPnl has been set. */
@property(nonatomic, readwrite) BOOL hasTodayPnl;

@property(nonatomic, readwrite, strong, null_resettable) GPBBoolValue *isOdd;
/** Test to see if @c isOdd has been set. */
@property(nonatomic, readwrite) BOOL hasIsOdd;

@property(nonatomic, readwrite) int64_t firstOpenAt;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *positionsPercent;
/** Test to see if @c positionsPercent has been set. */
@property(nonatomic, readwrite) BOOL hasPositionsPercent;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlPercent;
/** Test to see if @c unrealPnlPercent has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlPercent;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *mmPercent;
/** Test to see if @c mmPercent has been set. */
@property(nonatomic, readwrite) BOOL hasMmPercent;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *comboTypesArray;
/** The number of items in @c comboTypesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger comboTypesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *mmValue;
/** Test to see if @c mmValue has been set. */
@property(nonatomic, readwrite) BOOL hasMmValue;

@property(nonatomic, readwrite) int32_t holdingPeriod;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringValue *underlyingSymbol;
/** Test to see if @c underlyingSymbol has been set. */
@property(nonatomic, readwrite) BOOL hasUnderlyingSymbol;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *averageCostOfCarry;
/** Test to see if @c averageCostOfCarry has been set. */
@property(nonatomic, readwrite) BOOL hasAverageCostOfCarry;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlByCostOfCarry;
/** Test to see if @c unrealPnlByCostOfCarry has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlByCostOfCarry;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlPercentByCostOfCarry;
/** Test to see if @c unrealPnlPercentByCostOfCarry has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlPercentByCostOfCarry;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *positionPnl;
/** Test to see if @c positionPnl has been set. */
@property(nonatomic, readwrite) BOOL hasPositionPnl;

@property(nonatomic, readwrite) double averageCostByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlByAverage;
/** Test to see if @c unrealPnlByAverage has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *unrealPnlPercentByAverage;
/** Test to see if @c unrealPnlPercentByAverage has been set. */
@property(nonatomic, readwrite) BOOL hasUnrealPnlPercentByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *realizedPnl;
/** Test to see if @c realizedPnl has been set. */
@property(nonatomic, readwrite) BOOL hasRealizedPnl;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *realizedPnlByAverage;
/** Test to see if @c realizedPnlByAverage has been set. */
@property(nonatomic, readwrite) BOOL hasRealizedPnlByAverage;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *yesterdayPnl;
/** Test to see if @c yesterdayPnl has been set. */
@property(nonatomic, readwrite) BOOL hasYesterdayPnl;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *salableQty;
/** Test to see if @c salableQty has been set. */
@property(nonatomic, readwrite) BOOL hasSalableQty;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *todayPnlPercent;
/** Test to see if @c todayPnlPercent has been set. */
@property(nonatomic, readwrite) BOOL hasTodayPnlPercent;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *lastClosePrice;
/** Test to see if @c lastClosePrice has been set. */
@property(nonatomic, readwrite) BOOL hasLastClosePrice;

@property(nonatomic, readwrite) int64_t contractId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *positionKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *secGroupType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contractExtraDescription;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contractMajorDescription;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *accruedInterest;
/** Test to see if @c accruedInterest has been set. */
@property(nonatomic, readwrite) BOOL hasAccruedInterest;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleValue *positionPnlPercent;
/** Test to see if @c positionPnlPercent has been set. */
@property(nonatomic, readwrite) BOOL hasPositionPnlPercent;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
