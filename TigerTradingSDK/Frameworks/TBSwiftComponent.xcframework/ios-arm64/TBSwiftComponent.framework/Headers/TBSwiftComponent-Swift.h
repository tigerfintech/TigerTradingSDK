#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef TBSWIFTCOMPONENT_SWIFT_H
#define TBSWIFTCOMPONENT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import ChartKLineView;
@import CoreFoundation;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import TBBaseKit;
@import TBUIKit;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TBSwiftComponent",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class NSDate;
@class NSCoder;

/// 期货
SWIFT_CLASS("_TtC16TBSwiftComponent12FutruesUtils")
@interface FutruesUtils : NSObject
+ (NSString * _Nonnull)timeFormatWithZoneID:(NSString * _Nonnull)zoneID time:(int64_t)time format:(NSString * _Nonnull)format;
+ (NSDate * _Nonnull)dateFromStringWithZoneID:(NSString * _Nonnull)zoneID date:(NSString * _Nonnull)date format:(NSString * _Nonnull)format;
+ (NSString * _Nonnull)timeFormatWithZoneID:(NSString * _Nonnull)zoneID time:(int64_t)time lineType:(enum TBLineType)lineType;
+ (NSString * _Nonnull)formatDateStringWithLineType:(enum TBLineType)lineType;
+ (NSInteger)trendMinuteEmptyCount:(enum TBLandScapeMode)landMode SWIFT_WARN_UNUSED_RESULT;
+ (enum TBChartDrawMarketType)marketTypeWithMarket:(NSString * _Nonnull)market secType:(NSString * _Nonnull)secType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("IPificationManager")
@interface TBIPificationManager : NSObject
+ (void)setupIPificationWithCountryCode:(NSString * _Nonnull)countryCode;
+ (void)verifyWithInputPhoneNumber:(NSString * _Nonnull)inputPhoneNumber completion:(void (^ _Nullable)(NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS_NAMED("LanguageManager")
@interface TBSwiftLanguageManager : NSObject
+ (NSString * _Nonnull)localized:(NSString * _Nonnull)key comment:(NSString * _Nullable)comment SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)localized:(NSString * _Nonnull)key comment:(NSString * _Nullable)comment table:(NSString * _Nullable)table SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)localized:(NSString * _Nonnull)key comment:(NSString * _Nullable)comment bundle:(NSBundle * _Nullable)bundle table:(NSString * _Nullable)table SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) TBSwiftLanguageManager * _Nonnull sharedInstance;)
+ (TBSwiftLanguageManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
+ (void)setSharedInstance:(TBSwiftLanguageManager * _Nonnull)value;
/// 当前语言文件夹
@property (nonatomic, readonly, copy) NSString * _Nonnull folderName;
/// TUP、TT支持语言选展示列表
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull languagesDes;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
/// 当前选择语言所处索引
@property (nonatomic, readonly) NSInteger currentSelectedIndex;
/// 选择语言位置，对应languages
/// \param language language description
///
- (void)setSelected:(NSInteger)language;
/// APP支持语言LIST
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSString *> * _Nonnull availableLanguages;)
+ (NSArray<NSString *> * _Nonnull)availableLanguages SWIFT_WARN_UNUSED_RESULT;
@end



@interface TBSwiftLanguageManager (SWIFT_EXTENSION(TBSwiftComponent))
/// 是否为英文（非中文都返回true）
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isEnglish;)
+ (BOOL)isEnglish SWIFT_WARN_UNUSED_RESULT;
/// 是否系统为简体中文
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isSysSimpleChinese;)
+ (BOOL)isSysSimpleChinese SWIFT_WARN_UNUSED_RESULT;
/// 是否为简体中文
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isSimpleChinese;)
+ (BOOL)isSimpleChinese SWIFT_WARN_UNUSED_RESULT;
/// 是否为繁体中文
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isTraditionalChinese;)
+ (BOOL)isTraditionalChinese SWIFT_WARN_UNUSED_RESULT;
/// 埋点
///
/// returns:
/// description
+ (NSString * _Nonnull)saLangSetted SWIFT_WARN_UNUSED_RESULT;
/// 埋点-用户系统语言, 直接返回code
+ (NSString * _Nonnull)saSystemSetted SWIFT_WARN_UNUSED_RESULT;
/// 网络请求语言参数
///
/// returns:
/// description
+ (NSString * _Nonnull)langParam SWIFT_WARN_UNUSED_RESULT;
/// 此方法只是为了兼容原来的TBLanguageType类型，除了简繁其他语种都返回TBLanguageTypeEnglish
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) TBLanguageType currentType;)
+ (TBLanguageType)currentType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)settingTitleAtIndex:(NSInteger)atIndex SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)saveTitleAtIndex:(NSInteger)atIndex SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)cryptoCurrencyTitle SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)cryptoAccountTitle SWIFT_WARN_UNUSED_RESULT;
@end


/// 买卖盘口柱状图
/// 显示：买： bid/(bid + ask) 卖： ask/(bid + ask)
SWIFT_CLASS("_TtC16TBSwiftComponent22TBAskBidLineChanegView")
@interface TBAskBidLineChanegView : UIView
/// 卖量
@property (nonatomic) NSInteger askCount;
/// 买
@property (nonatomic) NSInteger bidCount;
- (void)notifyDataChanged;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// https://apidocs.tigerfintech.com/repository/82?branch=master&type=api&uri=%2Fapis%2Fmodule_edition.json#/operations/get-all-configs
/// 获取Pro/Lite版本相关的全部设置
SWIFT_CLASS("_TtC16TBSwiftComponent13TBCodableJSON")
@interface TBCodableJSON : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16TBSwiftComponent42TBBFFConfigModuleRuleAdditionListItemModel")
@interface TBBFFConfigModuleRuleAdditionListItemModel : TBCodableJSON
@property (nonatomic, copy) NSString * _Nullable itemKey;
@property (nonatomic) NSInteger dataType;
@property (nonatomic, copy) NSString * _Nullable itemData;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16TBSwiftComponent38TBBFFConfigModuleRuleAdditionListModel")
@interface TBBFFConfigModuleRuleAdditionListModel : TBCodableJSON
@property (nonatomic, copy) NSArray<TBBFFConfigModuleRuleAdditionListItemModel *> * _Nullable items;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class TBBFFConfigModuleRuleModel;

SWIFT_CLASS("_TtC16TBSwiftComponent34TBBFFConfigModuleRuleListItemModel")
@interface TBBFFConfigModuleRuleListItemModel : TBCodableJSON <NSCopying>
@property (nonatomic, copy) NSString * _Nullable scene;
@property (nonatomic, copy) NSArray<TBBFFConfigModuleRuleModel *> * _Nullable moduleRules;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end


@interface TBBFFConfigModuleRuleListItemModel (SWIFT_EXTENSION(TBSwiftComponent))
- (void)selectModuleWithName:(NSString * _Nullable)name;
@end

@class TBBFFPersonalizeRuleConfigItemModel;

SWIFT_CLASS("_TtC16TBSwiftComponent26TBBFFConfigModuleRuleModel")
@interface TBBFFConfigModuleRuleModel : TBCodableJSON <NSCopying>
@property (nonatomic, copy) NSString * _Nullable moduleName;
@property (nonatomic) BOOL active;
@property (nonatomic) BOOL visible;
@property (nonatomic) BOOL sortable;
@property (nonatomic) BOOL removable;
@property (nonatomic, copy) NSArray<TBBFFPersonalizeRuleConfigItemModel *> * _Nullable addition;
@property (nonatomic, copy) NSArray<TBBFFConfigModuleRuleModel *> * _Nullable subModuleRules;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)checkEqualityWithA:(TBBFFConfigModuleRuleModel * _Nonnull)a b:(TBBFFConfigModuleRuleModel * _Nonnull)b checkSubModules:(BOOL)checkSubModules SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS_NAMED("TBBFFPersonalizeRuleConfigItemModel")
@interface TBBFFPersonalizeRuleConfigItemModel : TBCodableJSON <NSCopying>
@property (nonatomic, copy) NSString * _Nullable configItemDataKey;
@property (nonatomic) NSInteger configItemDataType;
@property (nonatomic, copy) NSString * _Nullable data;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end

@class UIColor;

SWIFT_CLASS_NAMED("TBBottomButtonView")
@interface TBBottomButtonView : UIView
@property (nonatomic) CGFloat bottomBtnHeight;
/// 底部区域是否包含bottomSafeArea，默认不包含。
@property (nonatomic) BOOL isBottomSafeAreaShow;
@property (nonatomic) CGFloat topMargin;
@property (nonatomic) CGFloat bottomBtnTopMargin;
@property (nonatomic) CGFloat bottomBtnBottomMargin;
@property (nonatomic, copy) NSString * _Nonnull topButtonTitle;
@property (nonatomic, copy) NSString * _Nonnull bottomButtonTitle;
@property (nonatomic, strong) UIColor * _Nonnull topButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull topButtonTitleColor;
@property (nonatomic, copy) void (^ _Nullable topButtonAction)(void);
@property (nonatomic, copy) void (^ _Nullable bottomButtonAction)(void);
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// topButton 设置disable状态，
- (void)setTopButtonDisable;
/// topButton 设置disable状态，
- (void)setTopButtonUserInteractionEnabled:(BOOL)userInteractionEnabled;
/// 还原topButton状态，背景色和文字颜色
- (void)resetTopButton;
/// 设置底部button是否有border
- (void)setBottomButtonBorder:(BOOL)isBorder;
/// 设置底部按钮是否隐藏
- (void)setBottomButtonHidden:(BOOL)isHidden;
- (CGFloat)getContentHeight SWIFT_WARN_UNUSED_RESULT;
@end


@class ChartViewPortHandler;
@class ChartYAxis;
@class ChartTransformer;

SWIFT_RESILIENT_CLASS("_TtC16TBSwiftComponent24TBCustomChartYAxisRender")
@interface TBCustomChartYAxisRender : ChartYAxisRenderer
- (void)renderAxisLabelsWithContext:(CGContextRef _Nonnull)context;
- (nonnull instancetype)initWithViewPortHandler:(ChartViewPortHandler * _Nonnull)viewPortHandler yAxis:(ChartYAxis * _Nullable)yAxis transformer:(ChartTransformer * _Nullable)transformer OBJC_DESIGNATED_INITIALIZER;
@end

enum TBDateFormatterStyle : NSInteger;
@class NSNumber;
@class NSDateFormatter;
@class NSLocale;
@class NSTimeZone;

SWIFT_CLASS_NAMED("TBDateFormatter")
@interface TBDateFormatter : NSObject
+ (NSString * _Nonnull)formatterStyleRawValueWithStyle:(enum TBDateFormatterStyle)style SWIFT_WARN_UNUSED_RESULT;
/// 将字符串时间转换为系统时间字符串
/// \param date 时间
///
/// \param solidFormatter 原来字符串dateFormat
///
/// \param market 原来字符串对应市场（时区）
///
/// \param nFormatter 新字符串 dateFormat
///
///
/// returns:
///
+ (NSString * _Nonnull)covertSolidZoneToSystemWithDate:(NSString * _Nullable)date solidFormatter:(NSString * _Nonnull)solidFormatter market:(NSString * _Nonnull)market nFormatter:(NSString * _Nonnull)nFormatter SWIFT_WARN_UNUSED_RESULT;
/// 时间戳转换为系统时区String 时间(使用默认dateFormat)
/// \param stamp 时间戳
///
///
/// returns:
///
+ (NSString * _Nonnull)toSystemStringWithStamp:(NSNumber * _Nullable)stamp SWIFT_WARN_UNUSED_RESULT;
/// 时间戳转换为系统时区String 时间
/// \param stamp 时间戳
///
/// \param style 定义style 枚举
///
///
/// returns:
///
+ (NSString * _Nonnull)toSystemStringWithStamp:(NSNumber * _Nullable)stamp style:(enum TBDateFormatterStyle)style SWIFT_WARN_UNUSED_RESULT;
/// 时间戳转换为系统时区String 时间
/// \param stamp 时间戳
///
/// \param dateFormat 定义dateFormat
///
///
/// returns:
///
+ (NSString * _Nonnull)toSystemStringWithStamp:(NSNumber * _Nullable)stamp dateFormat:(NSString * _Nonnull)dateFormat SWIFT_WARN_UNUSED_RESULT;
/// 时间戳转换为指定市场String 时间
/// \param stamp 时间戳
///
/// \param market 市场
///
///
/// returns:
///
+ (NSString * _Nonnull)toStringWithStamp:(NSNumber * _Nullable)stamp market:(NSString * _Nonnull)market SWIFT_WARN_UNUSED_RESULT;
/// 时间戳转换为指定市场String 时间
/// \param stamp 时间戳
///
/// \param dateFormat 定义dateFormat
///
/// \param market 市场
///
///
/// returns:
///
+ (NSString * _Nonnull)toStringWithStamp:(NSNumber * _Nullable)stamp style:(enum TBDateFormatterStyle)style market:(NSString * _Nonnull)market SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)toStringWithStamp:(NSNumber * _Nullable)stamp dateFormat:(NSString * _Nonnull)dateFormat market:(NSString * _Nonnull)market SWIFT_WARN_UNUSED_RESULT;
/// 指定时区的格式化
/// \param stamp 时间戳
///
/// \param style 定义style 枚举值
///
/// \param zoneID 时区
///
///
/// returns:
///
+ (NSString * _Nonnull)toStringWithStamp:(NSNumber * _Nullable)stamp zoneID:(NSString * _Nullable)zoneID SWIFT_WARN_UNUSED_RESULT;
/// 指定时区的格式化
/// \param stamp 时间戳
///
/// \param style 定义style 枚举值
///
/// \param zoneID 时区
///
///
/// returns:
///
+ (NSString * _Nonnull)toStringWithStamp:(NSNumber * _Nullable)stamp style:(enum TBDateFormatterStyle)style zoneID:(NSString * _Nullable)zoneID SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)toStringWithStamp:(NSNumber * _Nullable)stamp dateFormat:(NSString * _Nonnull)dateFormat zoneID:(NSString * _Nullable)zoneID SWIFT_WARN_UNUSED_RESULT;
/// 字符串string 转换为时间戳
/// \param date 字符串时间
///
/// \param dateFormat 定义dateFormat
///
/// \param market 市场
///
///
/// returns:
///
+ (NSNumber * _Nonnull)toNumberWithDate:(NSString * _Nullable)date dateFormat:(NSString * _Nullable)dateFormat market:(NSString * _Nullable)market SWIFT_WARN_UNUSED_RESULT;
/// 字符串string 转换为时间戳
/// \param date 字符串时间
///
/// \param dateFormat 定义dateFormat
///
///
/// returns:
///
+ (NSNumber * _Nonnull)toNumberWithDate:(NSString * _Nullable)date dateFormat:(NSString * _Nullable)dateFormat SWIFT_WARN_UNUSED_RESULT;
/// 各市场对应的DateFormatter
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSDateFormatter * _Nonnull cnFormatter;)
+ (NSDateFormatter * _Nonnull)cnFormatter SWIFT_WARN_UNUSED_RESULT;
+ (void)setCnFormatter:(NSDateFormatter * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSDateFormatter * _Nonnull usFormatter;)
+ (NSDateFormatter * _Nonnull)usFormatter SWIFT_WARN_UNUSED_RESULT;
+ (void)setUsFormatter:(NSDateFormatter * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSDateFormatter * _Nonnull siFormatter;)
+ (NSDateFormatter * _Nonnull)siFormatter SWIFT_WARN_UNUSED_RESULT;
+ (void)setSiFormatter:(NSDateFormatter * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSDateFormatter * _Nonnull auFormatter;)
+ (NSDateFormatter * _Nonnull)auFormatter SWIFT_WARN_UNUSED_RESULT;
+ (void)setAuFormatter:(NSDateFormatter * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSDateFormatter * _Nonnull nzFormatter;)
+ (NSDateFormatter * _Nonnull)nzFormatter SWIFT_WARN_UNUSED_RESULT;
+ (void)setNzFormatter:(NSDateFormatter * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSDateFormatter * _Nonnull hkFormatter;)
+ (NSDateFormatter * _Nonnull)hkFormatter SWIFT_WARN_UNUSED_RESULT;
+ (void)setHkFormatter:(NSDateFormatter * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSDateFormatter * _Nonnull ukFormatter;)
+ (NSDateFormatter * _Nonnull)ukFormatter SWIFT_WARN_UNUSED_RESULT;
+ (void)setUkFormatter:(NSDateFormatter * _Nonnull)value;
+ (NSString * _Nonnull)zoneIdWithMarket:(NSString * _Nonnull)market SWIFT_WARN_UNUSED_RESULT;
/// locale / timeZone
+ (NSLocale * _Nonnull)localeWithMarket:(NSString * _Nullable)market SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeZone * _Nullable)timeZoneWithMarket:(NSString * _Nullable)market SWIFT_WARN_UNUSED_RESULT;
/// 持久化
+ (void)customFormatterStringWithStyle:(enum TBDateFormatterStyle)style;
+ (NSString * _Nonnull)customFormatterString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

/// 列举部分时间格式化枚举，有更多需求请在此创建枚举，可以参照文档附录2中进行创建
/// 枚举定义：日期（年月日时分秒等顺序）+dot(点)/simple(无连接)/CN(年月日汉字)/line(横线)
typedef SWIFT_ENUM_NAMED(NSInteger, TBDateFormatterStyle, "DateFormatterStyle", open) {
  TBDateFormatterStyleYyyyMMddSimple = 0,
  TBDateFormatterStyleYyyyMMdd = 1,
  TBDateFormatterStyleYyyyMMddDot = 2,
  TBDateFormatterStyleYyyyMMddLine = 3,
  TBDateFormatterStyleYyyyMMddHHmm = 4,
  TBDateFormatterStyleYyyyMMddHHmmss = 5,
  TBDateFormatterStyleYyMMdd = 6,
  TBDateFormatterStyleMMddyyyy = 7,
  TBDateFormatterStyleMMMddyyyy = 8,
  TBDateFormatterStyleMMMdd = 9,
  TBDateFormatterStyleYyyy = 10,
  TBDateFormatterStyleMMddHHmm = 11,
  TBDateFormatterStyleMMdd = 12,
  TBDateFormatterStyleHHmm = 13,
  TBDateFormatterStyleHHmmss = 14,
  TBDateFormatterStyleEEE = 15,
  TBDateFormatterStyleEEEE = 16,
  TBDateFormatterStyleMMM = 17,
  TBDateFormatterStyleMMMM = 18,
  TBDateFormatterStyleMMMddHHmm = 19,
};

@class UIViewController;

SWIFT_CLASS_NAMED("TBFloatingActionSheet")
@interface TBFloatingActionSheet : NSObject
- (void)showWithParentVC:(UIViewController * _Nonnull)parentVC titles:(NSArray<NSString *> * _Nonnull)titles tapAction:(void (^ _Nonnull)(NSString * _Nonnull, NSInteger))tapAction;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("TBFloatingMessage")
@interface TBFloatingMessage : NSObject
- (void)showWithParentVC:(UIViewController * _Nonnull)parentVC title:(NSString * _Nullable)title content:(NSString * _Nonnull)content sureButtonString:(NSString * _Nonnull)sureButtonString cancelButtonTitle:(NSString * _Nullable)cancelButtonTitle sureAction:(void (^ _Nullable)(void))sureAction cancelAction:(void (^ _Nullable)(void))cancelAction;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// 该类主要用于绘制基本指标页面价格变动图
SWIFT_CLASS("_TtC16TBSwiftComponent21TBFundamentalLineView")
@interface TBFundamentalLineView : UIView
@property (nonatomic) CGFloat maxPrice;
@property (nonatomic) CGFloat minPrice;
@property (nonatomic, copy) NSString * _Nullable desString;
@property (nonatomic) CGFloat latestPrice;
@property (nonatomic) CGFloat openPrice;
@property (nonatomic, copy) NSString * _Nonnull market;
@property (nonatomic, copy) NSString * _Nonnull secType;
/// 日内范围为latestPrice
@property (nonatomic) CGFloat close;
/// 设置过所有数据需要调用通知重绘
- (void)notifyDataChanged;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

enum TBTabBarIndex : NSInteger;

SWIFT_CLASS_NAMED("TBGoToTabBarIndex")
@interface TBGoToTabBarIndex : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TBGoToTabBarIndex * _Nonnull shareInstance;)
+ (TBGoToTabBarIndex * _Nonnull)shareInstance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull itemNameHome;)
+ (NSString * _Nonnull)itemNameHome SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull itemNameQuote;)
+ (NSString * _Nonnull)itemNameQuote SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull itemNameCommunity;)
+ (NSString * _Nonnull)itemNameCommunity SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull itemNamePortfolio;)
+ (NSString * _Nonnull)itemNamePortfolio SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull itemNameProfile;)
+ (NSString * _Nonnull)itemNameProfile SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull itemNameWealth;)
+ (NSString * _Nonnull)itemNameWealth SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
/// 跳转首页
+ (void)gotoHomePageTab;
/// 跳转行情tab
/// \param path 自选：Watchlist【默认】，基金：FUND，期货：FUT，数字货币：crypto，发现：discover
/// 市场tab:MARKET_US, MARKET_HK, MARKET_AU, MARKET_CN, MARKET_SI, MARKET_UK
///
+ (void)gotoQuotePageTab:(NSString * _Nonnull)path;
/// 跳转财富首页(切换一级tab, 或从当前页push打开)
+ (void)gotoFundMallTab;
/// 跳转 FCN tab
+ (void)gotoFCNTab;
/// 跳转社区
/// \param subIndex 子tab
///
+ (void)gotoCommunityTab:(NSInteger)subIndex;
/// 跳转持仓
/// \param path fund/
///
+ (void)gotoPortfolioTab:(NSString * _Nonnull)path;
/// 跳转持仓
/// \param path security 证券tab
///
/// \param tab 当前页面下的子tab, eg: portfolio 持仓tab
///
+ (void)gotoPortfolioTab:(NSString * _Nonnull)path tab:(NSString * _Nonnull)tab;
/// 跳转持仓
/// \param path security 证券tab
///
/// \param tab 当前页面下的子tab, eg: portfolio 持仓tab
///
+ (void)gotoPortfolioTab:(NSString * _Nonnull)path tab:(NSString * _Nonnull)tab saArriveFrom:(NSString * _Nonnull)saArriveFrom;
/// 跳转持仓
+ (void)gotoPortfolioTab;
/// 跳转我的
+ (void)gotoProfileTab;
+ (NSString * _Nullable)nameWithIndex:(enum TBTabBarIndex)index SWIFT_WARN_UNUSED_RESULT;
@end

@class UIImage;
@class UIButton;

SWIFT_PROTOCOL_NAMED("TBHomePageTableViewCellDataSource")
@protocol TBHomePageTableViewCellDataSource
@property (nonatomic, readonly) BOOL isNeedSectionHeader;
/// cell的高度
@property (nonatomic, readonly) CGFloat cellHeight;
/// cell展示view会直接加在cell上
@property (nonatomic, readonly, strong) UIView * _Nonnull cellSubView;
/// 模块标题，返回值为nil，不展示sectionHeader
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable moduleName;)
+ (NSString * _Nullable)moduleName SWIFT_WARN_UNUSED_RESULT;
@optional
/// 点击模块右侧icon行为，如果没有获取到section值，section 值为-1
- (void)moduleActionWithSection:(NSInteger)section;
@required
/// 主动刷新操作，模块数据刷新【主要是数据请求刷新】––
/// 场景：下拉刷新、点击右上角刷新
- (void)moduleRefreshDataNeeded;
@optional
/// 业务回调homepagevc，业务组件里定义eventid，在home page vc 里根据eventid实现 调用实现对应的方法
- (void)handleModuleAction:(void (^ _Nonnull)(NSString * _Nullable, id _Nullable))action;
/// 业务刷新homepagevc回调
/// index 分区section，
/// isSection 是否只刷新section
- (void)reloadDataCallBack:(void (^ _Nonnull)(BOOL))callBack;
/// 是否需要隐藏header中右侧的箭头，默认不隐藏
@property (nonatomic, readonly) BOOL sectionHeaderArrowHidden;
/// 是否需要section中title右侧的infoImage
@property (nonatomic, readonly) BOOL isNeedSectionHeaderInfoImageView;
@property (nonatomic, readonly, strong) UIImage * _Nullable sectionHeaderInfoImage;
@property (nonatomic, readonly) CGSize sectionHeaderInfoImageSize;
@property (nonatomic, readonly) CGFloat sectionHeaderInfoImageCenterYOffset;
/// 点击模块titleInfoButton的行为
- (void)moduleInfoActionWithSender:(UIButton * _Nonnull)sender;
/// 通知模块重新初始化，如:切换账户、登录账号
- (void)moduleUpdate;
/// 首页VC的viewWillAppear事件
- (void)homePageViewWillAppear;
/// 首页VC的viewWillDisappear事件
- (void)homePageViewWillDisappear;
/// 模块将要出现
- (void)moduleWillAppear;
/// 模块消失
- (void)moduleDidDisappear;
/// 轮询的 6s 请求
- (void)requestPolling;
/// 行情权限变更
- (void)quotePermissionChange;
/// 曝光埋点
@property (nonatomic, readonly, copy) NSString * _Nullable impressionComponent;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable trackExtraParams;
@end


SWIFT_CLASS_NAMED("TBMessageBoxViewController")
@interface TBMessageBoxViewController : UIViewController
/// 展示提示框
/// \param title title
///
/// \param message message
///
/// \param selectedCallBack selectedCallBack
///
+ (void)showWithTitle:(NSString * _Nullable)title message:(NSString * _Nullable)message selectedCallBack:(void (^ _Nullable)(NSInteger))selectedCallBack;
+ (void)showWithTitle:(NSString * _Nullable)title message:(NSString * _Nullable)message confirmTitle:(NSString * _Nullable)confirmTitle cancelTitle:(NSString * _Nullable)cancelTitle selectedCallBack:(void (^ _Nullable)(NSInteger))selectedCallBack;
+ (void)showWithTitle:(NSString * _Nullable)title message:(NSString * _Nullable)message confirmTitle:(NSString * _Nullable)confirmTitle cancelTitle:(NSString * _Nullable)cancelTitle selectedCallBack:(void (^ _Nullable)(NSInteger))selectedCallBack dissmissCallBack:(void (^ _Nullable)(void))dismissCallBack;
+ (void)showWithTitle:(NSString * _Nullable)title message:(NSString * _Nullable)message confirmTitle:(NSString * _Nullable)confirmTitle cancelTitle:(NSString * _Nullable)cancelTitle callBackAtDismissCompletion:(BOOL)callBackAtDismissCompletion selectedCallBack:(void (^ _Nullable)(NSInteger))selectedCallBack;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class TTTAttributedLabel;
@class NSURL;

SWIFT_CLASS_NAMED("TBLinkMessageBoxViewController")
@interface TBLinkMessageBoxViewController : TBMessageBoxViewController <TTTAttributedLabelDelegate>
+ (void)showWithTitle:(NSString * _Nullable)title message:(NSString * _Nullable)message links:(NSDictionary<NSString *, NSString *> * _Nullable)links confirmTitle:(NSString * _Nullable)confirmTitle cancelTitle:(NSString * _Nullable)cancelTitle selectedCallBack:(void (^ _Nullable)(NSInteger))selectedCallBack;
- (void)attributedLabel:(TTTAttributedLabel * _Null_unspecified)label didSelectLinkWithURL:(NSURL * _Null_unspecified)url;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class TBMoibleLocalizationModel;

SWIFT_CLASS_NAMED("TBMobileLocalizationManager")
@interface TBMobileLocalizationManager : NSObject
+ (void)fetchMobileLocalization:(void (^ _Nullable)(TBMoibleLocalizationModel * _Nullable))success failure:(void (^ _Nullable)(NSError * _Nonnull))failure;
+ (TBMobileLocalizationManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
+ (void)destroyInstance;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@property (nonatomic, strong) TBMoibleLocalizationModel * _Nonnull localizationModel;
+ (BOOL)isRedUp SWIFT_WARN_UNUSED_RESULT;
+ (void)setRedUp:(BOOL)isRedUp;
+ (BOOL)isSymbolFront SWIFT_WARN_UNUSED_RESULT;
+ (void)setSymbolFont:(BOOL)symbolFront;
+ (BOOL)isQuoteTapTab SWIFT_WARN_UNUSED_RESULT;
+ (void)setQuoteTapTab:(BOOL)quoteTapTab;
+ (NSString * _Nonnull)dateFormat SWIFT_WARN_UNUSED_RESULT;
+ (void)setDateFormat:(NSString * _Nonnull)format;
///
+ (NSString * _Nonnull)defaultChartType SWIFT_WARN_UNUSED_RESULT;
@end

@class NSData;
@class JSONModelError;

SWIFT_CLASS_NAMED("TBMoibleLocalizationModel")
@interface TBMoibleLocalizationModel : JSONModel
+ (BOOL)propertyIsOptional:(NSString * _Null_unspecified)propertyName SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithDictionary:(NSDictionary * _Null_unspecified)dict error:(NSError * _Nullable * _Nullable)error SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithData:(NSData * _Null_unspecified)data error:(NSError * _Nullable * _Nullable)error SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (null_unspecified instancetype)initWithString:(NSString * _Null_unspecified)string error:(JSONModelError * _Nullable * _Null_unspecified)err SWIFT_UNAVAILABLE;
- (null_unspecified instancetype)initWithString:(NSString * _Null_unspecified)string usingEncoding:(NSUInteger)encoding error:(JSONModelError * _Nullable * _Null_unspecified)err SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (null_unspecified instancetype)initFromURLWithString:(NSString * _Null_unspecified)urlString completion:(JSONModelBlock _Null_unspecified)completeBlock SWIFT_UNAVAILABLE;
@end


SWIFT_RESILIENT_CLASS("_TtC16TBSwiftComponent31TBPlaceOrderPnLChartYAxisRender")
@interface TBPlaceOrderPnLChartYAxisRender : TBCustomChartYAxisRender
- (void)renderAxisLineWithContext:(CGContextRef _Nonnull)context;
- (void)renderLimitLinesWithContext:(CGContextRef _Nonnull)context;
- (nonnull instancetype)initWithViewPortHandler:(ChartViewPortHandler * _Nonnull)viewPortHandler yAxis:(ChartYAxis * _Nullable)yAxis transformer:(ChartTransformer * _Nullable)transformer OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, TBPortfolioTabIndex, "TBPortfolioTabIndex", open) {
  TBPortfolioTabIndexMyPortfolio = 0,
  TBPortfolioTabIndexTodayOrder = 1,
};


SWIFT_CLASS_NAMED("TBPortfolioTabTypeValue")
@interface TBPortfolioTabTypeValue : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull securities;)
+ (NSString * _Nonnull)securities SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull funds;)
+ (NSString * _Nonnull)funds SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull futures;)
+ (NSString * _Nonnull)futures SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull cryptos;)
+ (NSString * _Nonnull)cryptos SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol TBSegmentSliderDelegate;
@class UITouch;
@class UIEvent;

SWIFT_CLASS_NAMED("TBSegmentSlider")
@interface TBSegmentSlider : UIControl
@property (nonatomic, weak) id <TBSegmentSliderDelegate> _Nullable delegate;
/// 自动吸附到几个点中，其余位置不可选
@property (nonatomic) BOOL isOnlyAutoAdsorptionMarkPosition;
/// 未被选中情况下的半径
@property (nonatomic) CGFloat normalRadius;
/// 选中情况下的半径
@property (nonatomic) CGFloat selectedRadius;
/// 未选中情况下的颜色
@property (nonatomic, strong) UIColor * _Nonnull normalColor;
@property (nonatomic, strong) UIColor * _Nonnull normalHoleColor;
/// 选中情况下的颜色
@property (nonatomic, strong) UIColor * _Nonnull selectedColor;
@property (nonatomic, strong) UIColor * _Nonnull selectedHoleColor;
/// 未选中圆环位置
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull markPositions;
/// thumb image
@property (nonatomic, strong) UIImage * _Nullable thumbImage;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@property (nonatomic) CGFloat percent;
- (void)layoutSubviews;
@end


SWIFT_PROTOCOL("_TtP16TBSwiftComponent23TBSegmentSliderDelegate_")
@protocol TBSegmentSliderDelegate
- (void)sliderValueWithSegmentSlider:(TBSegmentSlider * _Nonnull)segmentSlider value:(CGFloat)value;
@end


SWIFT_CLASS("_TtC16TBSwiftComponent26TBStockDetailPriceListView")
@interface TBStockDetailPriceListView : UIView
@property (nonatomic) NSInteger sell;
@property (nonatomic) NSInteger buy;
@property (nonatomic) NSInteger mid;
@property (nonatomic) NSInteger max;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
@end


/// 技术指标model
SWIFT_CLASS("_TtC16TBSwiftComponent26TBStockIndicatrixItemModel")
@interface TBStockIndicatrixItemModel : TBCodableJSON <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
/// 主图名称
/// Allowed values:MA、BOLL、EMA、BBI、ENE、PBX、MIKE、ALLIGAT、VMA、LMA、HMA、SAR
@property (nonatomic, copy) NSString * _Nullable name;
/// 主图默认是否勾选
@property (nonatomic) BOOL check;
/// 主图默认是否展示
@property (nonatomic) BOOL visible;
/// 子项名称
/// Allowed values: MovingAveragePeriod1、MovingAveragePeriod2、MovingAveragePeriod3、MovingAveragePeriod4、MovingAveragePeriod5、MovingAveragePeriod6、MovingAveragePeriod7、ComputationPeriod、StockCharacteristicParameter、Period、MINAF、MAXAF、ShortPeriod、LongPeriod、MovingAveragePeriod、UpReferenceLine、MidReferenceLine、DownReferenceLine、WR1、WR2
@property (nonatomic, copy) NSString * _Nullable subName;
/// 子项是否允许勾选
@property (nonatomic) BOOL enableSelected;
/// 子项是否默认选中
@property (nonatomic) BOOL selected;
/// 当前值：有上传的返回记录值，未上传的返回默认值。
@property (nonatomic) NSInteger value;
@property (nonatomic, copy) NSString * _Nullable addition;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// 重写NSObject protocol的isEqual方法, 用于比较是否相等
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("TBStockProLiteConfigItemModel")
@interface TBStockProLiteConfigItemModel : TBCodableJSON <NSCopying>
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) BOOL visible;
@property (nonatomic) BOOL removable;
@property (nonatomic) BOOL sortable;
@property (nonatomic, copy) NSString * _Nullable prompt;
/// 个股
@property (nonatomic, copy) NSString * _Nullable market;
@property (nonatomic, copy) NSString * _Nullable edition;
/// 持仓相关
/// IB、OMNIBUS、VIRTUAL、OMNIBUS_FA
@property (nonatomic, copy) NSString * _Nullable brokerAccountType;
/// SEC、FUT、FUND、DIGI
@property (nonatomic, copy) NSString * _Nullable omnibusSegmentType;
/// FIFO、DINIMISH、AVERAGE
@property (nonatomic, copy) NSString * _Nullable costAlgoType;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class TBWatchlistConfigModel;
@class TBStockProLitePriceLineModel;
@class TBTigerGptConfigModel;
@class NSMutableArray;

SWIFT_CLASS_NAMED("TBStockProLiteConfigModel")
@interface TBStockProLiteConfigModel : TBCodableJSON
/// HomeTab模块列表
/// RESHMAN、ACCOUNT、PORTFOLIO、WATCHLIST、BANNER、NEWS、OPPORTUNITY、COMMUNITY、FUNDS、STOCKS、CRYPTOS、OPTIONS、CAMPAIGNS、UNKNOWN、COLLEGE、TIGER_VAULT
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable homeModule;
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable homeModuleRecommend;
/// 行情一级导航Tab列表
/// Discover、Watchlist、Stocks、Futures、Funds、Global
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable quoteTab;
/// 持仓页模块列表
/// Overview、Securities、Futures、Funds
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable portfolioModule;
/// 持仓表单字段列表
/// PositionMkt、LastCost、UnrlzdPnl、DailyPnl、PositionRatio、MarginAmount、MarginRatio
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable portfolioDataField;
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable quoteStockTab;
/// 个股详情页模块列表
/// ORDER_BOOK、PRICES_VOLUMES、HK_ASK_BID_BROKERS、POSITION_ORDER、WAR_ENTER、OPTION_ENTER、INDUSTRY、CONCEPT、US_DEPTH_BIG_ORDER、DISTRIBUTION、FLOW_ANALYSIS、LARGE_ORDER、MARKET_SCANNER、COMPANY_PROFILE
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable quoteDetailModule;
/// 持仓成本算法
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable portfolioCostAlgo;
/// 废弃. 用minorChartIndicatrix中的VOL代替
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable chartMinorIndex;
/// 日K主图指标
@property (nonatomic, copy) NSArray<TBStockIndicatrixItemModel *> * _Nullable majorChartIndicatrix;
/// 日K副图指标
@property (nonatomic, copy) NSArray<TBStockIndicatrixItemModel *> * _Nullable minorChartIndicatrix;
/// 首页样式: Tab(首页, index=0), Classic(自选, index=1)
@property (nonatomic, copy) NSString * _Nullable homePageEdition;
/// 个股页Module 版本（Pro / Lite)
@property (nonatomic, copy) NSString * _Nullable quoteDetailPageEdition;
/// 下单页：版本（Pro / Lite)
@property (nonatomic, copy) NSString * _Nullable tradePageEdition;
/// 发现页：版本（Pro / Lite)
@property (nonatomic, copy) NSString * _Nullable discoverPageEdition;
/// 资产tab：版本（Pro / Lite) 目前端上没有使用
@property (nonatomic, copy) NSString * _Nullable assetPageEdition;
/// 个股页交易按钮样式
/// BuySell、Trade
@property (nonatomic, copy) NSString * _Nullable tradeBtnStyle;
/// 币种配置
/// (字段: name, brokerAccountType. 每种账户类型一个配置项)
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable currencyConfig;
/// 持仓页Lite 版 更多功能（8.1.1）
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable portfolioFunctionModule;
/// 持仓页Lite 版 功能入口（8.1.1）
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable portfolioModuleBelowAsset;
/// 持仓页 Lite 版 持仓页 更多功能 露出个数
@property (nonatomic) NSInteger portfolioFunctionModuleAppearCount;
/// 持仓tab：版本（Pro / Lite)（8.1.1）
@property (nonatomic, copy) NSString * _Nullable portfolioPageEdition;
/// 自选配置
@property (nonatomic, copy) NSArray<TBWatchlistConfigModel *> * _Nullable watchListMiniChart;
/// k线的现价线指标
@property (nonatomic, copy) NSArray<TBStockProLitePriceLineModel *> * _Nullable quoteDetailCurrentPriceLine;
/// 财经日历地区
/// (发现-财经日历-筛选)
@property (nonatomic, copy) NSArray<TBTigerGptConfigModel *> * _Nullable economicCalendarRegion;
///
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable investRecommendMarket;
/// 社区tab的默认二级tab:
/// community 社区, news 资讯
@property (nonatomic, copy) NSString * _Nullable communityOrNews;
/// tigerGpt 各页面展示开关信息
@property (nonatomic, strong) NSMutableArray * _Nullable tigerGptArray;
/// 首页账户资产详情开关
@property (nonatomic, copy) NSString * _Nullable accountAssetDetailSwitch;
/// 持仓页pro 版 功能区（9.0.6）
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable portfolioFunctionModulePro;
/// 新版 BFF 配置
@property (nonatomic, copy) NSArray<TBBFFPersonalizeRuleConfigItemModel *> * _Nullable personalizeRuleList;
/// 模块规则配置(907)
@property (nonatomic, copy) NSArray<TBBFFConfigModuleRuleListItemModel *> * _Nullable moduleRuleList;
/// 持仓期权表单字段列表
/// IV、Delta、Gamma、Vega、Theta
@property (nonatomic, copy) NSArray<TBStockProLiteConfigItemModel *> * _Nullable portfolioOptionDataField;
@property (nonatomic, copy) NSString * _Nullable tigerGptLink;
/// 交易设置-证券-策略设置 (9.0.5)
/// Classic, strategy
@property (nonatomic, copy) NSString * _Nullable portfolioMode;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (nullable instancetype)fromJSON:(id _Nullable)obj SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)toJSON SWIFT_WARN_UNUSED_RESULT;
@end


@interface TBStockProLiteConfigModel (SWIFT_EXTENSION(TBSwiftComponent))
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable calendarFilterRegion;
@end


/// pro/lite 常量配置
SWIFT_CLASS_NAMED("TBStockProLiteConst")
@interface TBStockProLiteConst : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSString *> * _Nonnull defaultMarkets;)
+ (NSArray<NSString *> * _Nonnull)defaultMarkets SWIFT_WARN_UNUSED_RESULT;
/// 个股页Buy & Sell交易按钮
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull SymbolPageBuySell;)
+ (NSString * _Nonnull)SymbolPageBuySell SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull SymbolPageTrade;)
+ (NSString * _Nonnull)SymbolPageTrade SWIFT_WARN_UNUSED_RESULT;
/// 默认首页样式
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull HomePageEditionClassic;)
+ (NSString * _Nonnull)HomePageEditionClassic SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull HomePageEditionTab;)
+ (NSString * _Nonnull)HomePageEditionTab SWIFT_WARN_UNUSED_RESULT;
/// 交易设置-策略模式
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull PortfolioModeClassic;)
+ (NSString * _Nonnull)PortfolioModeClassic SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull PortfolioModeStrategy;)
+ (NSString * _Nonnull)PortfolioModeStrategy SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull oldKeyMap;)
+ (NSDictionary<NSString *, NSString *> * _Nonnull)oldKeyMap SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSNumber *, NSString *> * _Nonnull chartMinorIndexs;)
+ (NSDictionary<NSNumber *, NSString *> * _Nonnull)chartMinorIndexs SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16TBSwiftComponent27TBStockProLiteDefaultConfig")
@interface TBStockProLiteDefaultConfig : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// BFF App版本(Pro/Lite)相关接口
SWIFT_CLASS_NAMED("TBStockProLiteHttpManager")
@interface TBStockProLiteHttpManager : NSObject
/// 变更指定模块的设置数据
/// <ul>
///   <li>
///     Parameters moduleType: 模块类型
///   </li>
/// </ul>
/// 设置数据<code>config</code>的格式需要与获取时的格式一致。
+ (void)postPersonalizationConfigModuleType:(NSString * _Nullable)moduleType config:(id _Nullable)config success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nonnull))failure;
/// 恢复默认设置
/// <ul>
///   <li>
///     Parameters moduleType: 模块类型
///   </li>
/// </ul>
+ (void)restureDefaultConfigs:(NSString * _Nullable)moduleType success:(void (^ _Nullable)(TBStockProLiteConfigModel * _Nullable))success failure:(void (^ _Nullable)(NSError * _Nonnull))failure;
/// 获取指定场景配置
/// \param scene 场景类型
///
+ (void)fetchModuleRuleList:(NSString * _Nullable)scene success:(void (^ _Nullable)(NSArray<TBBFFConfigModuleRuleModel *> * _Nullable))success failure:(void (^ _Nullable)(NSError * _Nonnull))failure;
+ (void)fetchStockTabOrdersDefault:(void (^ _Nullable)(NSArray<TBStockProLiteConfigItemModel *> * _Nullable))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
+ (void)fetchQuoteDetailModuleDefault:(NSString * _Nonnull)marketCode success:(void (^ _Nullable)(NSArray<TBStockProLiteConfigItemModel *> * _Nullable))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
+ (void)fetchPositionIndicatorsDefaultConfigsWithSuccess:(void (^ _Nullable)(NSArray<TBStockProLiteConfigItemModel *> * _Nullable))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
+ (void)restorePositionIndicatorsDefaultConfigsWithSuccess:(void (^ _Nullable)(NSArray<TBStockProLiteConfigItemModel *> * _Nullable))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, TBStockProLiteIndicatorPeriod, open) {
  TBStockProLiteIndicatorPeriodNone = 0,
  TBStockProLiteIndicatorPeriodTimeTrend = 1,
  TBStockProLiteIndicatorPeriodDay = 2,
};


SWIFT_CLASS_NAMED("TBStockProLiteManager")
@interface TBStockProLiteManager : NSObject
/// 小组件刷新方法
+ (void)reloadTimelines;
+ (TBStockProLiteManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (void)updateNewUser;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
/// 国内包和region为sgp/chn的默认pro，其他国外包默认lite
///
/// returns:
/// 是否为默认lite
+ (BOOL)defaultLiteMode SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)symbolPageIsLiteModeWithSecType:(NSString * _Nonnull)secType SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)symbolPageIsLiteMode SWIFT_WARN_UNUSED_RESULT;
+ (void)setSymbolPageLiteMode:(BOOL)isLiteMode success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
@property (nonatomic, strong) TBStockProLiteConfigModel * _Nullable configModel;
/// 查询所有配置的回调
@property (nonatomic, copy) void (^ _Nullable updateIndex)(void);
/// 持久化用户所有配置
- (void)saveAllConfigs;
/// 获取指定”{market}+{edition}“的”个股页概览tab模块列表”配置
/// \param marketMode 格式”{market}_{edition}”.
/// market为大写; edition为Pro/Lite, 首字母大写.
/// eg. US_Pro, US_Lite, HK_Pro, HK_Lite…
///
+ (NSArray<TBStockProLiteConfigItemModel *> * _Nullable)symbolPageConfigs:(NSString * _Nonnull)marketMode SWIFT_WARN_UNUSED_RESULT;
/// 修改”个股页概览tab模块列表”配置
/// \param configs 用户编辑overview顺序
///
/// \param marketCode 当前用户编辑的市场 & 版本
///
/// \param success success description
///
/// \param failure failure description
///
+ (void)setSymbolPageConfigs:(NSArray<TBStockProLiteConfigItemModel *> * _Nonnull)configs marketCode:(NSString * _Nonnull)marketCode success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 查询所有配置
/// 目前请求数据时机：
/// 1、APP启动，didFinishLaunchingWithOptions
/// 2、用户登录成功，请求
/// 3、登录账号切换成功 请求
/// 4、账户类型切换成功后 请求（不需要刷新 ）
/// 5、长链接推送
/// 6.   启动崩溃修复，请求
- (void)fetchAllConfigs:(BOOL)updateIndex;
- (void)fetchAllConfigsWithUpdateIndex:(BOOL)updateIndex success:(void (^ _Nullable)(void))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 查询指定配置. 统一处理游客/TUP, 保存逻辑
/// \param moduleName 模块名(一级key)
/// 或通用模块的二级key:
/// 对personalizeRuleList(个性化规则), 可以是configItemDataKey,
/// 对moduleRuleList(模块规则), 可以是scene
///
- (void)fetchConfigWithModuleName:(NSString * _Nonnull)moduleName success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 查询指定配置. 统一处理游客/TUP, 保存逻辑
/// \param moduleNames 模块名(一级key)的列表
///
- (void)fetchConfigWithModuleNames:(NSArray<NSString *> * _Nonnull)moduleNames success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 查询指定配置. 统一处理游客/TUP, 保存逻辑
/// \param moduleName 通用模块名(一级key)
///
/// \param itemNames 二级key, 可以是以”,“分隔的列表:
/// 对personalizeRuleList(个性化规则), 是configItemDataKey,
/// 对moduleRuleList(模块规则), 是scene
///
- (void)fetchConfigWithModuleName:(NSString * _Nonnull)moduleName itemName:(NSString * _Nullable)itemName success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 查询指定配置. 统一处理游客/TUP, 保存逻辑
/// \param moduleName 通用模块名(一级key)
///
/// \param itemNames 二级key的列表:
/// 对personalizeRuleList(个性化规则), 是configItemDataKey,
/// 对moduleRuleList(模块规则), 是scene
///
- (void)fetchConfigWithModuleName:(NSString * _Nonnull)moduleName itemNames:(NSArray<NSString *> * _Nonnull)itemNames success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 修改指定配置
/// \param moduleName 模块名(一级key)
///
/// \param value key对应的值
///
- (void)modifyConfigWithModuleName:(NSString * _Nonnull)moduleName value:(id _Nonnull)value success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 修改指定配置
/// <ul>
///   <li>
///     Parameters modules: 模块的key-value
///   </li>
/// </ul>
- (void)modifyConfigWithModules:(NSDictionary<NSString *, id> * _Nonnull)modules success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 修改指定配置
/// \param moduleName 模块名(一级key)
///
/// \param itemName 二级key, 可以是以”,“分隔的列表:
/// 对personalizeRuleList(个性化规则), 是configItemDataKey,
/// 对moduleRuleList(模块规则), 是scene
///
/// \param value 二级key对应的值
///
- (void)modifyConfigWithModuleName:(NSString * _Nonnull)moduleName itemName:(NSString * _Nonnull)itemName value:(id _Nonnull)value success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 修改指定配置
/// \param moduleName 模块名(一级key)
///
/// \param modules 模块的key-value
///
- (void)modifyConfigWithModuleName:(NSString * _Nonnull)moduleName items:(NSDictionary<NSString *, id> * _Nonnull)items success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
- (void)updateModulesIfNeeded;
- (void)updateModulesIfNeededWithSuccess:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 个股页交易按钮样式
/// Lite页面：海外包region为sg和cn以外的用户，交易按钮默认显示Buy & Sell
/// 老用户保留原Trade按钮（Lite&Pro）
+ (NSString * _Nonnull)tradeBtnStyle SWIFT_WARN_UNUSED_RESULT;
/// 保存用户交易按钮样式
/// \param style 交易按钮样式，值为”BuySell”: “Trade”
/// 可以使用TBStockProLiteConst.SymbolPageBuySell, TBStockProLiteConst.SymbolPageTrade
///
+ (void)setTradeBtn:(NSString * _Nullable)style success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 保存用户持仓策略模式设置
/// \param mode 策略模式，值为”portfolioMode”: “Classic”
///
+ (void)setPortfolioMode:(NSString * _Nullable)mode success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
+ (NSString * _Nonnull)searchMarketOrders SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)reportSymbolPageConfig:(NSString * _Nonnull)marketMode SWIFT_WARN_UNUSED_RESULT;
/// 找指定场景名(scene)对应的数据结构, 包含scene和moduleRules列表
- (TBBFFConfigModuleRuleListItemModel * _Nullable)moduleRuleListItemWithScene:(NSString * _Nonnull)scene SWIFT_WARN_UNUSED_RESULT;
/// 找指定场景名(scene)+模块名(moduleName)对应的数据结构
- (TBBFFConfigModuleRuleModel * _Nullable)moduleRuleWithScene:(NSString * _Nonnull)scene name:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// 更新BFF接口中”moduleRuleList”部分的数据, 有修改时才提交.
/// 提交成功后GET一次新数据, 再执行回调
- (void)updateModuleRuleListIfNeeded:(NSArray<TBBFFConfigModuleRuleListItemModel *> * _Nonnull)items success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
@end



@interface TBStockProLiteManager (SWIFT_EXTENSION(TBSwiftComponent))
/// 社区默认tab是否为资讯, 按原有代码逻辑默认为false.
/// 判断逻辑依赖<code>TBAppManager</code>
@property (nonatomic, readonly) BOOL communityDefaultTabIsNews;
@end


@interface TBStockProLiteManager (SWIFT_EXTENSION(TBSwiftComponent))
+ (BOOL)isHiddenModuleWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isExplanationEntryHide SWIFT_WARN_UNUSED_RESULT;
@end


@interface TBStockProLiteManager (SWIFT_EXTENSION(TBSwiftComponent))
+ (BOOL)discoverIsLiteMode SWIFT_WARN_UNUSED_RESULT;
/// 查询”财经日历地区”配置
- (void)fetchCalendarFilterRegionsWithSuccess:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
@end


@interface TBStockProLiteManager (SWIFT_EXTENSION(TBSwiftComponent))
/// 获取”行情一级tab”配置顺序
+ (NSArray<TBStockProLiteConfigItemModel *> * _Nullable)quoteTab SWIFT_WARN_UNUSED_RESULT;
/// 修改”行情一级tab”配置
/// <ul>
///   <li>
///     Parameters tabs: 用户编辑tab顺序的model列表
///   </li>
/// </ul>
+ (void)setQuoteTab:(NSArray<TBStockProLiteConfigItemModel *> * _Nullable)tabs success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 股票二级tab的市场顺序
+ (NSArray<TBStockProLiteConfigItemModel *> * _Nonnull)marketQuoteOrders SWIFT_WARN_UNUSED_RESULT;
/// 修改”股票二级tab的市场顺序”配置
+ (void)setMarketQuoteOrders:(NSArray<TBStockProLiteConfigItemModel *> * _Nullable)orders success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// K线图层”现价线”开关
+ (BOOL)currentPriceLine SWIFT_WARN_UNUSED_RESULT;
/// 修改K线图层”现价线”配置
+ (void)setCurrentPriceLineWithVisible:(BOOL)visible success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
@end


@interface TBStockProLiteManager (SWIFT_EXTENSION(TBSwiftComponent))
/// 修改”首页模块列表”配置
+ (void)setHomeModules:(NSArray<TBStockProLiteConfigItemModel *> * _Nullable)configs success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 默认tab索引. 0: 首页, 1: 自选(行情tab)
+ (NSInteger)homePageEdition SWIFT_WARN_UNUSED_RESULT;
/// 修改”默认首页”配置
+ (void)setHomePageEdition:(NSInteger)index success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 获取”首页模块推荐”配置
+ (NSArray<TBStockProLiteConfigItemModel *> * _Nullable)recommendConfigsModules SWIFT_WARN_UNUSED_RESULT;
@end


@interface TBStockProLiteManager (SWIFT_EXTENSION(TBSwiftComponent))
+ (BOOL)placeOrderIsLiteMode SWIFT_WARN_UNUSED_RESULT;
+ (void)setPlaceOrderLiteMode:(BOOL)isLiteMode success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
+ (NSString * _Nonnull)portfolioPageEdition SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)portfolioIsLiteMode SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)portfolioIsProMode SWIFT_WARN_UNUSED_RESULT;
+ (void)setPortfolioPageMode:(BOOL)isLiteMode success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 获取用户持仓顺序
/// \param accountCode 如约定，accountCode是由accountType_SegType_CostType 三个字段通过_拼接，从字典portfolioConfigs里获取用户配置
/// eg. OMNIBUS_SEC_FIFO, OMNIBUS_SEC_DINIMISH, VIRTUAL_FUT_DINIMISH
///
///
/// returns:
/// description
+ (NSArray<TBStockProLiteConfigItemModel *> * _Nullable)portfolioConfigs:(NSString * _Nonnull)accountCode SWIFT_WARN_UNUSED_RESULT;
/// 修改”持仓表单字段列表”配置
/// \param configs 持仓表单字段列表
///
/// \param accountCode 格式为”{账户类型}<em>{segType}</em>{成本类型}”
///
+ (void)setPortfolioConfigs:(NSArray<TBStockProLiteConfigItemModel *> * _Nonnull)configs accountCode:(NSString * _Nonnull)accountCode success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 获取持仓成本计算方式
/// \param segType segType description
///
///
/// returns:
/// description
+ (TBStockProLiteConfigItemModel * _Nullable)costType:(NSString * _Nonnull)accountType_SegType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)currencyOfUserPreference:(NSString * _Nonnull)accountType SWIFT_WARN_UNUSED_RESULT;
/// 修改”持仓成本算法”配置
+ (void)setCostType:(NSString * _Nonnull)accountType_SegType costType:(TBStockProLiteConfigItemModel * _Nonnull)costType success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
/// 修改币种配置
+ (void)setCurrencyConfig:(NSArray<TBStockProLiteConfigItemModel *> * _Nullable)currencyConfigs success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
+ (void)refreshCurrencyConfigWithSuccess:(void (^ _Nullable)(NSArray<TBStockProLiteConfigItemModel *> * _Nullable))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
+ (NSArray<TBStockProLiteConfigItemModel *> * _Nullable)portfolioMoreFunctions SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)portfolioRecommendFunctionsCount SWIFT_WARN_UNUSED_RESULT;
/// pro页面-持仓-功能区
+ (NSArray<TBStockProLiteConfigItemModel *> * _Nullable)portfolioFunctionModuleProWithOmnibusSegmentType:(NSString * _Nullable)omnibusSegmentType SWIFT_WARN_UNUSED_RESULT;
/// pro页面-持仓-功能区重置，切换账户前重置缓存的数据
+ (void)resetPortfolioFunctionModulePro;
/// 获取持仓功能区(pro)模块
- (void)fetchPortfolioFunctionModuleProWithSuccess:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
@end


@interface TBStockProLiteManager (SWIFT_EXTENSION(TBSwiftComponent))
+ (NSInteger)configForPortfolioLiteFunctionsAppearCount SWIFT_WARN_UNUSED_RESULT;
/// 获取对应配置
+ (TBBFFPersonalizeRuleConfigItemModel * _Nullable)configForNameWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// 获取对应配置
+ (BOOL)checkIsWithNoDisturb SWIFT_WARN_UNUSED_RESULT;
+ (void)updateExpireTimeIntervalWithNoDisturb;
/// 保存单个配置并同步给服务器
+ (void)updatePersonalizeRuleConfigWithName:(NSString * _Nonnull)name type:(NSInteger)type data:(NSString * _Nonnull)data success:(void (^ _Nullable)(BOOL, NSError * _Nullable))success;
/// 保存多个配置并同步给服务器
+ (void)updatePersonalizeRuleConfigsWithItems:(NSArray<TBBFFPersonalizeRuleConfigItemModel *> * _Nonnull)items success:(void (^ _Nullable)(BOOL, NSError * _Nullable))success;
/// 是否已展示过引导
+ (BOOL)hasShownGuideWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// 设置引导状态不再展示
+ (void)hideGuideWithName:(NSString * _Nonnull)name;
/// 获取指定name配置值
+ (NSString * _Nullable)getValueForConfig:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// 获取Bool类型配置值
+ (BOOL)getBoolValueForConfig:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// 交易设置-证券-策略设置, 设置mode
+ (void)setConfigForPortfolioMode:(NSString * _Nonnull)mode;
/// 交易设置-证券-策略设置
/// 未设置时，返回classic模式（基础模式）
+ (NSString * _Nonnull)configForPortfolioMode SWIFT_WARN_UNUSED_RESULT;
+ (void)setWatchListLogo:(BOOL)isOn success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
+ (BOOL)watchListLogoState SWIFT_WARN_UNUSED_RESULT;
+ (void)setOptionExpirationSwitch:(BOOL)isOn success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
+ (BOOL)optionExpirationSwitch SWIFT_WARN_UNUSED_RESULT;
+ (void)setChartPrePostSwitch:(BOOL)isOn success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
+ (BOOL)prePostState SWIFT_WARN_UNUSED_RESULT;
+ (void)setOvernightState:(BOOL)isOn success:(void (^ _Nullable)(BOOL))success failure:(void (^ _Nullable)(NSError * _Nullable))failure;
+ (BOOL)overnightState SWIFT_WARN_UNUSED_RESULT;
/// 发现-热门交易榜-funds 是否展示
+ (BOOL)shouldShowDiscoverFund SWIFT_WARN_UNUSED_RESULT;
/// 基金模块是否展示
+ (BOOL)shouldShowFundMall SWIFT_WARN_UNUSED_RESULT;
/// 是否有财富权限. 有权限才在”导航设置”页显示”底部导航展示财富”开关
@property (nonatomic, readonly) BOOL enableWealth;
/// 一级Tab是否显示”财富”
@property (nonatomic) BOOL displayWealthTab;
/// 返回 tab 列表
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull tabNames;
- (NSArray<NSString *> * _Nonnull)tabNamesWithWealth:(BOOL)wealth SWIFT_WARN_UNUSED_RESULT;
@end


@interface TBStockProLiteManager (SWIFT_EXTENSION(TBSwiftComponent))
- (NSString * _Nullable)selectedMainIndicatorWithPeriod:(enum TBStockProLiteIndicatorPeriod)period SWIFT_WARN_UNUSED_RESULT;
- (void)setSelectedMainIndicatorWithName:(NSString * _Nullable)name period:(enum TBStockProLiteIndicatorPeriod)period;
- (void)setSelectedSubIndicatorWithName:(NSString * _Nonnull)name period:(enum TBStockProLiteIndicatorPeriod)period;
- (void)setSelectedSubIndicators:(NSArray<NSString *> * _Nonnull)names period:(enum TBStockProLiteIndicatorPeriod)period;
/// 主图指标的名称列表, MA固定在第一位
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull mainChartIndicators;
/// 可见的主图指标的名称列表, MA固定在第一位
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull visibleMainChartIndicators;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull invisibleMainChartIndicators;
/// 当前选择的主图指标名称, nil表示未选择主图指标
@property (nonatomic, readonly, copy) NSString * _Nullable selectedMainChartIndicator;
/// 选择可见的主图指标列表
- (void)updateVisibleMainChartIndicators:(NSArray<NSString *> * _Nonnull)names;
/// 选择主图指标, nil表示不选
- (void)selectMainChartIndicator:(NSString * _Nullable)name;
/// 副图指标的名称列表(包含VOL)
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull subChartIndicators;
/// 是否显示成交量副图
@property (nonatomic, readonly, strong) NSNumber * _Nullable isChartMinorVolSelected;
/// 可见的副图指标的名称列表
/// \param volIncluded 是否包含VOL
///
- (NSArray<NSString *> * _Nonnull)visibleSubChartIndicatorsWithVolIncluded:(BOOL)volIncluded SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull invisibleSubChartIndicators;
/// 已选择的副图指标的名称列表(包含VOL)
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable selectedSubChartIndicators;
/// 选择可见的副图指标列表(自动跳过VOL)
- (void)updateVisibleSubChartIndicators:(NSArray<NSString *> * _Nonnull)names;
/// 选择副图指标列表(包含VOL)
- (void)updateCheckedSubChartIndicators:(NSArray<NSString *> * _Nonnull)names;
/// 选择VOL图表示的指标
- (void)updateVolItemWithAddition:(NSString * _Nonnull)addition;
/// 置顶一个副图指标
- (void)topSubChartIndicator:(NSString * _Nonnull)name;
/// 取消选中一个副图指标
- (void)deleteSubChartIndicator:(NSString * _Nonnull)name;
/// 返回指定指标名称的配置项的copy
- (NSArray<TBStockIndicatrixItemModel *> * _Nullable)itemsForIndicator:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (void)updateItems:(NSArray<TBStockIndicatrixItemModel *> * _Nonnull)items forIndicator:(NSString * _Nonnull)name;
@property (nonatomic, readonly, copy) NSString * _Nonnull volChartIndicator;
/// 更新VOL图当前选择的指标
- (void)updateVolChartIndicatorWithName:(NSString * _Nonnull)name;
- (NSArray<TBStockIndicatrixItemModel *> * _Nullable)indicatorParams:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)maxMAIndicatorParams SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nullable)indicatorValues:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)indicatorWithIndex:(NSInteger)index key:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nullable)minMaxValue:(NSString * _Nullable)key subName:(NSString * _Nullable)subName SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("TBStockProLitePriceLineModel")
@interface TBStockProLitePriceLineModel : TBCodableJSON
@property (nonatomic) BOOL flag;
@property (nonatomic, copy) NSString * _Nullable edition;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16TBSwiftComponent33TBStockProLiteSwitchTableViewCell")
@interface TBStockProLiteSwitchTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (void)updateWithProImage:(NSString * _Nonnull)proImg liteImg:(NSString * _Nonnull)liteImg;
- (void)updateWithProImage:(NSString * _Nonnull)proImg liteImg:(NSString * _Nonnull)liteImg hint:(NSString * _Nullable)hint;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

@class UIApplication;
@class TBOperationsModel;

SWIFT_CLASS_NAMED("TBSwiftComponentLifeCycleModule")
@interface TBSwiftComponentLifeCycleModule : NSObject <TBModuleDelegate>
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)tb_operationsAfterLoginOrRegister:(TBOperationsModel * _Nonnull)model;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16TBSwiftComponent34TBSwiftTableViewBaseViewController")
@interface TBSwiftTableViewBaseViewController : TBBaseViewController
- (void)viewDidLoad;
- (BOOL)hasTBNavigationBar SWIFT_WARN_UNUSED_RESULT;
- (BOOL)enableDragBack SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tbNavigationBarHeight SWIFT_WARN_UNUSED_RESULT;
- (BOOL)autoGenerateBackBarButtonItem SWIFT_WARN_UNUSED_RESULT;
- (null_unspecified instancetype)initWithNavigatorURL:(NSURL * _Null_unspecified)URL query:(NSDictionary * _Null_unspecified)query OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSIndexPath;

@interface TBSwiftTableViewBaseViewController (SWIFT_EXTENSION(TBSwiftComponent)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@protocol TBSwiftTableViewCellDataSource;

SWIFT_CLASS("_TtC16TBSwiftComponent20TBSwiftTableViewCell")
@interface TBSwiftTableViewCell : UITableViewCell
- (void)awakeFromNib;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@property (nonatomic, strong) id <TBSwiftTableViewCellDataSource> _Nullable dataSource;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIFont;

SWIFT_PROTOCOL_NAMED("TBSwiftTableViewCellDataSource")
@protocol TBSwiftTableViewCellDataSource <NSObject>
/// 是否需要section header 如果需要返回 true
@property (nonatomic, readonly) BOOL isNeedSectionHeader;
@optional
/// 自定义setion header 如果不返回使用默认section header，样式为: xxxx >；参考首页section header
@property (nonatomic, readonly, strong) UIView * _Nullable sectionHeaderView;
@required
/// setion header模块标题，返回值为nil，不展示sectionHeader
@property (nonatomic, readonly, copy) NSString * _Nullable moduleName;
@optional
/// 是否需要隐藏header中右侧的箭头，默认不隐藏
@property (nonatomic, readonly) BOOL sectionHeaderArrowHidden;
/// header右侧显示View More还是箭头
@property (nonatomic, readonly) BOOL isHeaderRightViewMore;
/// 背景色
@property (nonatomic, readonly, strong) UIColor * _Nonnull sectionHeaderBackgroundColor;
/// 圆角
@property (nonatomic, readonly) CGFloat sectionHeaderCornerRadious;
/// 标题字号
@property (nonatomic, readonly, strong) UIFont * _Nonnull sectionHeaderTitleFont;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sectionHeaderCustomHeight;
@required
/// setion header点击模块右侧icon行为，如果没有获取到section值，section 值为-1
- (void)moduleActionWithSection:(NSInteger)section;
/// cell的高度
@property (nonatomic, readonly) CGFloat cellHeight;
/// cell展示view会直接加在cell上
@property (nonatomic, readonly, strong) UIView * _Nonnull cellSubView;
@optional
/// 业务回调vc，业务组件里定义eventid，在vc 里根据eventid实现 调用实现对应的方法，类似TBTableviewcell 里的handleActionForCell:object:info:
- (void)handleModuleAction:(void (^ _Nonnull)(NSString * _Nullable, id _Nullable))action;
@required
/// 业务刷新tableview回调
/// index 分区section，
/// isSection 是否只刷新section
- (void)reloadDataCallBack:(void (^ _Nonnull)(BOOL))callBack;
/// 主动刷新操作，模块数据刷新【主要是数据请求刷新】––
/// 场景：下拉刷新、点击右上角刷新
- (void)moduleRefreshDataNeeded;
@optional
/// 轮询的 6s 请求
- (void)requestPolling;
- (void)moduleDidScroll;
/// VC的viewWillAppear事件
- (void)superVCViewWillAppear;
/// VC的viewWillDisappear事件
- (void)superVCViewWillDisappear;
/// 模块将要出现
/// 可以直接调用vc的ViewWillAppear/ViewDidAppear
- (void)moduleWillAppear;
/// 模块消失
/// 可以直接调用vc的ViewWillDisappear/ViewDidDisappear
- (void)moduleDidDisappear;
/// 模块曝光埋点
@property (nonatomic, readonly, copy) NSString * _Nullable impressionComponent;
@property (nonatomic, readonly, copy) NSString * _Nullable impressionPage;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable trackExtraParams;
@end


SWIFT_PROTOCOL("_TtP16TBSwiftComponent28TBSwiftTableViewCellDelegate_")
@protocol TBSwiftTableViewCellDelegate
- (void)handleEventWithEventId:(NSString * _Nullable)eventId params:(id _Nullable)params;
- (void)reloadDataWithIndex:(NSInteger)index isSection:(BOOL)isSection;
@end


SWIFT_CLASS_NAMED("TBSwiftTableViewViewController")
@interface TBSwiftTableViewViewController : TBBaseViewController
@property (nonatomic, weak) id <UIScrollViewDelegate> _Nullable scrollDelegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)changeAppColorStyle;
- (BOOL)hasTBNavigationBar SWIFT_WARN_UNUSED_RESULT;
- (null_unspecified instancetype)initWithNavigatorURL:(NSURL * _Null_unspecified)URL query:(NSDictionary * _Null_unspecified)query OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface TBSwiftTableViewViewController (SWIFT_EXTENSION(TBSwiftComponent)) <TBSwiftTableViewCellDelegate>
- (void)handleEventWithEventId:(NSString * _Nullable)eventId params:(id _Nullable)params;
- (void)reloadDataWithIndex:(NSInteger)index isSection:(BOOL)isSection;
@end

@class UIScrollView;

@interface TBSwiftTableViewViewController (SWIFT_EXTENSION(TBSwiftComponent)) <UIScrollViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
@end


@interface TBSwiftTableViewViewController (SWIFT_EXTENSION(TBSwiftComponent)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

/// Tab枚举类型.
/// 在objc使用, 需要<code>TBTabBarIndex</code>转字符串, 再取对应的索引值.
/// warning:
/// 因为Tab内容可动态配置, 所以该类型为纯枚举, 不再表示索引.
typedef SWIFT_ENUM(NSInteger, TBTabBarIndex, open) {
  TBTabBarIndexHome = 0,
  TBTabBarIndexQuote = 1,
  TBTabBarIndexCommunity = 2,
  TBTabBarIndexPortfolio = 3,
  TBTabBarIndexProfile = 4,
  TBTabBarIndexWealth = 5,
};


SWIFT_CLASS("_TtC16TBSwiftComponent21TBTagSelectorBaseCell")
@interface TBTagSelectorBaseCell : UICollectionViewCell
@property (nonatomic) BOOL isSelect;
@property (nonatomic, copy) NSString * _Nullable text;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
+ (CGSize)getCellSizeWithText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (void)prepareForReuse;
@end


SWIFT_CLASS("_TtC16TBSwiftComponent17TBTagSelectorCell")
@interface TBTagSelectorCell : TBTagSelectorBaseCell
@property (nonatomic) BOOL isSelect;
@property (nonatomic, copy) NSString * _Nullable text;
+ (CGSize)getCellSizeWithText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (void)prepareForReuse;
- (void)updateUI;
@end

@protocol TBTagSelectorFlowLayoutDelegate;
@class UICollectionViewLayoutAttributes;
@class TBTagSelectorModel;

SWIFT_CLASS("_TtC16TBSwiftComponent23TBTagSelectorFlowLayout")
@interface TBTagSelectorFlowLayout : UICollectionViewFlowLayout
@property (nonatomic, weak) id <TBTagSelectorFlowLayoutDelegate> _Nullable delegate;
@property (nonatomic, copy) NSArray<UICollectionViewLayoutAttributes *> * _Nonnull itemAttributes;
@property (nonatomic) CGFloat contentHeight;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
+ (CGFloat)heightWithWidth:(CGFloat)width tags:(NSArray<TBTagSelectorModel *> * _Nonnull)tags SWIFT_WARN_UNUSED_RESULT;
- (void)prepareLayout;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) CGSize collectionViewContentSize;
- (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
- (void)invalidateLayout;
@end


SWIFT_PROTOCOL("_TtP16TBSwiftComponent31TBTagSelectorFlowLayoutDelegate_")
@protocol TBTagSelectorFlowLayoutDelegate <UICollectionViewDelegateFlowLayout>
@end


SWIFT_CLASS("_TtC16TBSwiftComponent18TBTagSelectorModel")
@interface TBTagSelectorModel : NSObject
@property (nonatomic) BOOL isSelect;
@property (nonatomic, strong) NSString * _Nonnull text;
@property (nonatomic) Class _Nullable cellClass;
@property (nonatomic, strong) NSString * _Nonnull itemID;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionView;

SWIFT_CLASS("_TtC16TBSwiftComponent17TBTagSelectorView")
@interface TBTagSelectorView : UIView <TBTagSelectorFlowLayoutDelegate>
@property (nonatomic, strong) TBTagSelectorFlowLayout * _Nonnull flowLayout;
@property (nonatomic) NSInteger maxSelectCount;
@property (nonatomic, copy) void (^ _Nullable selectClosure)(NSArray<TBTagSelectorModel *> * _Nonnull, NSInteger);
@property (nonatomic, copy) NSArray<TBTagSelectorModel *> * _Nonnull tags;
@property (nonatomic) CGFloat contentWidth;
@property (nonatomic, strong) UICollectionView * _Nonnull tagsView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)reloadData;
@end

@class UICollectionViewLayout;

@interface TBTagSelectorView (SWIFT_EXTENSION(TBSwiftComponent)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("TBTigerGptConfigModel")
@interface TBTigerGptConfigModel : TBCodableJSON
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) BOOL orderRuleFirst;
@property (nonatomic) BOOL selected;
@property (nonatomic) BOOL visible;
@property (nonatomic) BOOL visibilityRuleFirst;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("TBV80GuideView")
@interface TBV80GuideView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame text:(NSString * _Nullable)text guideAction:(void (^ _Nullable)(void))guideAction closeAction:(void (^ _Nullable)(void))closeAction;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@property (nonatomic, strong) UIImage * _Nullable guideImage;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


/// 持仓成本算法配置
/// AVG、FIFO、DILUTED
SWIFT_CLASS_NAMED("TBWatchlistConfigModel")
@interface TBWatchlistConfigModel : TBCodableJSON
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable content;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
